/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/passkey/register-challenge": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Register a new passkey */
        post: operations["register-challenge-passkey"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/passkey/login-challenge": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Generate a login challenge */
        post: operations["login-challenge-passkey"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/passkey/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Register a passkey */
        post: operations["register-passkey"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/passkey/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Login with a passkey */
        post: operations["login-passkey"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        RegisterChallengePasskeyRequest: {
            /** Format: email */
            email: string;
        };
        /** @description Initialize Attestation Response */
        RegisterChallengePasskeyResponse: Record<string, never>;
        /** @description Initialize Assertion Response */
        LoginChallengePasskeyResponse: Record<string, never>;
        /** @description Finalize Attestation Request */
        RegisterPasskeyRequest: Record<string, never>;
        /** @description Finalize Assertion Request */
        LoginPasskeyRequest: Record<string, never>;
        /** @description Finalize Assertion Response */
        LoginPasskeyResponse: Record<string, never>;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "register-challenge-passkey": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["RegisterChallengePasskeyRequest"];
            };
        };
        responses: {
            /** @description Challenge generated */
            200: {
                headers: {
                    /** @description Set-Cookie */
                    "Set-Cookie"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RegisterChallengePasskeyResponse"];
                };
            };
        };
    };
    "login-challenge-passkey": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    /** @description Set-Cookie */
                    "Set-Cookie"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoginChallengePasskeyResponse"];
                };
            };
        };
    };
    "register-passkey": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie: {
                /** @description session */
                __attestation__: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["RegisterPasskeyRequest"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "login-passkey": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie: {
                /** @description session */
                __assertion__: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["LoginPasskeyRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoginPasskeyResponse"];
                };
            };
        };
    };
}
